(require-extension utils)
(require-extension srfi-1)
(require-extension srfi-69)

(define (tape-set t p v)
  (let ((ex (hash-table-exists? t p)))
    (cond
      ((and (equal? v 0) ex) (hash-table-delete! t p) t)
      ((equal? v 0) t)
      (else (hash-table-set! t p v) t))))

(define (tape-get t p)
  (let ((ex (hash-table-exists? t p)))
    (if ex (hash-table-ref t p) 0)))

(define (tape-count t)
  (hash-table-size t))

(define (machine steps)
  (let loop ((c 0) (i 0) (s #\a) (t (make-hash-table)))
    (let ((v (tape-get t i)))
      (cond
        ((= c steps) (tape-count t))
        ((and (equal? s #\a) (= v 0))
         (tape-set t i 1)
         (loop (+ c 1) (+ i 1) #\b t))
        ((and (equal? s #\a) (= v 1))
         (tape-set t i 0)
         (loop (+ c 1) (- i 1) #\d t))
        ((and (equal? s #\b) (= v 0))
         (tape-set t i 1)
         (loop (+ c 1) (+ i 1) #\c t))
        ((and (equal? s #\b) (= v 1))
         (tape-set t i 0)
         (loop (+ c 1) (+ i 1) #\f t))
        ((and (equal? s #\c) (= v 0))
         (tape-set t i 1)
         (loop (+ c 1) (- i 1) #\c t))
        ((and (equal? s #\c) (= v 1))
         (tape-set t i 1)
         (loop (+ c 1) (- i 1) #\a t))
        ((and (equal? s #\d) (= v 0))
         (tape-set t i 0)
         (loop (+ c 1) (- i 1) #\e t))
        ((and (equal? s #\d) (= v 1))
         (tape-set t i 1)
         (loop (+ c 1) (+ i 1) #\a t))
        ((and (equal? s #\e) (= v 0))
         (tape-set t i 1)
         (loop (+ c 1) (- i 1) #\a t))
        ((and (equal? s #\e) (= v 1))
         (tape-set t i 0)
         (loop (+ c 1) (+ i 1) #\b t))
        ((and (equal? s #\f) (= v 0))
         (tape-set t i 0)
         (loop (+ c 1) (+ i 1) #\c t))
        ((and (equal? s #\f) (= v 1))
         (tape-set t i 0)
         (loop (+ c 1) (+ i 1) #\e t))))))

(print (machine 12317297))
